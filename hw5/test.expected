\x:bool. if true then x else false
=> (bool -> bool)
\x:bool. x
\f:bool -> bool. \x:bool. f x
=> ((bool -> bool) -> bool -> bool)
\f:bool -> bool. \x:bool. f x
\f:bool -> bool. \x:bool. if f x then f else \y:bool. y
=> ((bool -> bool) -> bool -> bool -> bool)
\f:bool -> bool. \x:bool. if f x then f else \y:bool. y
\f:bool -> bool. \x:bool. if x then x else f
<stdin>:5:43-5:44: type error: expected type bool but got bool -> bool
\f:bool -> bool. \x:bool. if f then f else x
<stdin>:6:29-6:30: type error: expected type bool but got bool -> bool
/\A. \f:A -> A. \x:A. f x
=> ((forall A. (A -> A) -> A -> A))
/\A. \f:A -> A. \x:A. f x
id = /\A. \x:A. x
=> ((forall A. A -> A))
/\A. \x:A. x
Nat = (forall A. (A -> A) -> A -> A) (Type)
succ = \x:Nat. /\A. \s:A -> A. \z:A. s (x A s z)
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\x:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (x A s z)
zero = /\A. \s:A -> A. \z:A. z
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. z
one = succ zero
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s z
plus = \x:Nat. \y:Nat. /\A. \s:A -> A. \z:A. x A s (y A s z)
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. x A s (y A s z)
two = plus one one
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s z)
times = \x:Nat. \y:Nat. /\A. \s:A -> A. \z:A. x A (y A s) z
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. x A (y A s) z
three = succ two
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s z))
six = times two (succ two)
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s z)))))
sixteen = times two (times two (times two two))
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s z)))))))))))))))
twenty = times (times two two) (plus three two)
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s z)))))))))))))))))))
nine = times three three
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s z))))))))
large = times twenty sixteen
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s z)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
small = times one six
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s z)))))
four = times two two
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s z)))
Bool = (forall A. A -> A -> A) (Type)
tru = /\A. \t:A. \f:A. t
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
fls = /\A. \t:A. \f:A. f
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
ite = /\A. \c:Bool. \x:A. \y:A. c A x y
=> ((forall A. (forall A. A -> A -> A) -> A -> A -> A))
/\A. \c:(forall A. A -> A -> A). \x:A. \y:A. c A x y
is_zero = \x:Nat. x Bool (\z:Bool. fls) tru
=> ((forall A. (A -> A) -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. (A -> A) -> A -> A). x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)
result = is_zero zero
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
result_1 = is_zero one
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
result_4 = is_zero four
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
pair = /\A. /\B. \car:A. \cdr:B. /\C. \f:A -> B -> C. f car cdr
=> ((forall A. (forall B. A -> B -> (forall C. (A -> B -> C) -> C))))
/\A. /\B. \car:A. \cdr:B. /\C. \f:A -> B -> C. f car cdr
fst = /\A. /\B. \p:(forall C. (A -> B -> C) -> C). p A (\x:A. \y:B. x)
=> ((forall A. (forall B. (forall C. (A -> B -> C) -> C) -> A)))
/\A. /\B. \p:(forall C. (A -> B -> C) -> C). p A (\x:A. \y:B. x)
snd = /\A. /\B. \p:(forall C. (A -> B -> C) -> C). p B (\x:A. \y:B. y)
=> ((forall A. (forall B. (forall C. (A -> B -> C) -> C) -> B)))
/\A. /\B. \p:(forall C. (A -> B -> C) -> C). p B (\x:A. \y:B. y)
NatPair = (forall C. (Nat -> Nat -> C) -> C) (Type)
zerop = pair Nat Nat zero zero
=> ((forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C))
/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)
succp = \p:NatPair. pair Nat Nat (succ (fst Nat Nat p)) (fst Nat Nat p)
=> ((forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) -> (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C))
\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))
pred = \x:Nat. snd Nat Nat (x NatPair succp zerop)
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)
three = pred four
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s z))
two = pred three
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s z)
recoo = /\A. \n:A. pair A Nat n zero
=> ((forall A. A -> (forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C)))
/\A. \n:A. /\C. \f:A -> (forall A. (A -> A) -> A -> A) -> C. f n (/\A. \s:A -> A. \z:A. z)
recss = /\A. \f:Nat -> A -> A. \p:(forall C. (A -> Nat -> C) -> C). pair A Nat (f (snd A Nat p) (fst A Nat p)) (succ (snd A Nat p))
=> ((forall A. ((forall A. (A -> A) -> A -> A) -> A -> A) -> (forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C) -> (forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C)))
/\A. \f:(forall A. (A -> A) -> A -> A) -> A -> A. \p:(forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f0:A -> (forall A. (A -> A) -> A -> A) -> C. f0 (f (p (forall A. (A -> A) -> A -> A) (\x:A. \y:(forall A. (A -> A) -> A -> A). y)) (p A (\x:A. \y:(forall A. (A -> A) -> A -> A). x))) (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:A. \y:(forall A. (A -> A) -> A -> A). y) A s z))
natrec = /\A. \f:Nat -> A -> A. \n:A. \m:Nat. fst A Nat (m (forall C. (A -> Nat -> C) -> C) (recss A f) (recoo A n))
=> ((forall A. ((forall A. (A -> A) -> A -> A) -> A -> A) -> A -> (forall A. (A -> A) -> A -> A) -> A))
/\A. \f:(forall A. (A -> A) -> A -> A) -> A -> A. \n:A. \m:(forall A. (A -> A) -> A -> A). m (forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f0:A -> (forall A. (A -> A) -> A -> A) -> C. f0 (f (p (forall A. (A -> A) -> A -> A) (\x:A. \y:(forall A. (A -> A) -> A -> A). y)) (p A (\x:A. \y:(forall A. (A -> A) -> A -> A). x))) (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:A. \y:(forall A. (A -> A) -> A -> A). y) A s z))) (/\C. \f:A -> (forall A. (A -> A) -> A -> A) -> C. f n (/\A. \s:A -> A. \z:A. z)) A (\x:A. \y:(forall A. (A -> A) -> A -> A). x)
factorial = \n:Nat. natrec Nat (\p:Nat. \q:Nat. times (succ p) q) one n
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\n:(forall A. (A -> A) -> A -> A). n (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f0:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f0 (/\A. \s:A -> A. \z:A. p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y) A (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s) z)) (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:A. \y:(forall A. (A -> A) -> A -> A). y) A s z))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x)
twenty_four = factorial four
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s z)))))))))))))))))))))))
six = factorial (succ two)
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s z)))))
nil = /\A. /\B. \f:A -> B -> B. \x:B. x
=> ((forall A. (forall B. (A -> B -> B) -> B -> B)))
/\A. /\B. \f:A -> B -> B. \x:B. x
cons = /\A. \x:A. \xs:(forall B. (A -> B -> B) -> B -> B). /\B. \f:A -> B -> B. \n:B. f x (xs B f n)
=> ((forall A. A -> (forall B. (A -> B -> B) -> B -> B) -> (forall B. (A -> B -> B) -> B -> B)))
/\A. \x:A. \xs:(forall B. (A -> B -> B) -> B -> B). /\B. \f:A -> B -> B. \n:B. f x (xs B f n)
map = /\A. /\B. \f:A -> B. \xs:(forall B. (A -> B -> B) -> B -> B). xs (forall C. (B -> C -> C) -> C -> C) (\hd:A. \tl:(forall C. (B -> C -> C) -> C -> C). cons B (f hd) tl) (nil B)
=> ((forall A. (forall B. (A -> B) -> (forall B. (A -> B -> B) -> B -> B) -> (forall C. (B -> C -> C) -> C -> C))))
/\A. /\B. \f:A -> B. \xs:(forall B. (A -> B -> B) -> B -> B). xs (forall C. (B -> C -> C) -> C -> C) (\hd:A. \tl:(forall C. (B -> C -> C) -> C -> C). /\B0. \f0:B -> B0 -> B0. \n:B0. f0 (f hd) (tl B0 f0 n)) (/\B0. \f:B -> B0 -> B0. \x:B0. x)
NatList = (forall B. (Nat -> B -> B) -> B -> B) (Type)
NatNatListPair = (forall C. (Nat -> NatList -> C) -> C) (Type)
seqO = \x:Nat. pair Nat NatList (pred x) (nil Nat)
=> ((forall A. (A -> A) -> A -> A) -> (forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C))
\x:(forall A. (A -> A) -> A -> A). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)
seqS = \p:NatNatListPair. pair Nat NatList (pred (fst Nat NatList p)) (cons Nat (fst Nat NatList p) (snd Nat NatList p))
=> ((forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) -> (forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C))
\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p0:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x)) (p (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n))
seq = \x:Nat. snd Nat NatList (x NatNatListPair seqS (seqO x))
=> ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p0:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x)) (p (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y)
seq0 = seq zero
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x
seq1 = seq one
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) n
seq2 = seq two
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) n)
seq3 = seq three
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) n))
seq4 = seq four
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) n)))
length = /\A. \xs:(forall B. (A -> B -> B) -> B -> B). xs Nat (\hd:A. \tl:Nat. succ tl) zero
=> ((forall A. (forall B. (A -> B -> B) -> B -> B) -> (forall A. (A -> A) -> A -> A)))
/\A. \xs:(forall B. (A -> B -> B) -> B -> B). xs (forall A. (A -> A) -> A -> A) (\hd:A. \tl:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl A s z)) (/\A. \s:A -> A. \z:A. z)
l0 = length Nat seq0
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. z
l1 = length Nat seq1
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s z
l2 = length Nat seq2
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s z)
l3 = length Nat seq3
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s z))
l4 = length Nat seq4
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s z)))
factorial_via_seq = \x:Nat. map Nat Nat succ (seq x) Nat (\hd:Nat. \tl:Nat. times hd tl) one
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A))
\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p0:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p0 (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x)) (p (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) (forall C. ((forall A. (A -> A) -> A -> A) -> C -> C) -> C -> C) (\hd:(forall A. (A -> A) -> A -> A). \tl:(forall C. ((forall A. (A -> A) -> A -> A) -> C -> C) -> C -> C). /\B0. \f0:(forall A. (A -> A) -> A -> A) -> B0 -> B0. \n:B0. f0 (/\A. \s:A -> A. \z:A. s (hd A s z)) (tl B0 f0 n)) (/\B0. \f:(forall A. (A -> A) -> A -> A) -> B0 -> B0. \x0:B0. x0) (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. hd A (tl A s) z) (/\A. \s:A -> A. \z:A. s z)
factorial_via_seq four
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s (s z)))))))))))))))))))))))
natcase = /\A. \f:Nat -> A. \x:A. \n:Nat. natrec A (\p:Nat. \q:A. p A (\y:A. f p) x) x n
=> ((forall A. ((forall A. (A -> A) -> A -> A) -> A) -> A -> (forall A. (A -> A) -> A -> A) -> A))
/\A. \f:(forall A. (A -> A) -> A -> A) -> A. \x:A. \n:(forall A. (A -> A) -> A -> A). n (forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. (A -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f0:A -> (forall A. (A -> A) -> A -> A) -> C. f0 (p (forall A. (A -> A) -> A -> A) (\x0:A. \y:(forall A. (A -> A) -> A -> A). y) A (\y:A. f (p (forall A. (A -> A) -> A -> A) (\x0:A. \y:(forall A. (A -> A) -> A -> A). y))) x) (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:A. \y:(forall A. (A -> A) -> A -> A). y) A s z))) (/\C. \f:A -> (forall A. (A -> A) -> A -> A) -> C. f x (/\A. \s:A -> A. \z:A. z)) A (\x0:A. \y:(forall A. (A -> A) -> A -> A). x0)
and = \x:Bool. \y:Bool. x Bool y fls
=> ((forall A. A -> A -> A) -> (forall A. A -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. A -> A -> A). \y:(forall A. A -> A -> A). x (forall A. A -> A -> A) y (/\A. \t:A. \f:A. f)
not = \x:Bool. x Bool fls tru
=> ((forall A. A -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. A -> A -> A). x (forall A. A -> A -> A) (/\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)
or = \x:Bool. \y:Bool. x Bool tru y
=> ((forall A. A -> A -> A) -> (forall A. A -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. A -> A -> A). \y:(forall A. A -> A -> A). x (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) y
and tru tru
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
and fls tru
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
or tru tru
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
or fls tru
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
or fls fls
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
not tru
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
not fls
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
eq = \x:Nat. \y:Nat. and (is_zero (x Nat pred y)) (is_zero (y Nat pred x))
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) y (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (y (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f)
eq one one
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
eq two two
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
eq three three
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
eq four three
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
eq (factorial four) (factorial_via_seq four)
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
neq = \x:Nat. \y:Nat. not (eq x y)
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) y (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (y (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)
neq one two
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
neq two two
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
le = \x:Nat. \y:Nat. or (eq x y) (is_zero (y Nat pred x))
=> ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> (forall A. A -> A -> A))
\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) y (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (y (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (y (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t))
le two one
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
le one two
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
le one four
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
le one one
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
is_nil = \l:NatList. l Bool (\x:Nat. \tl:Bool. fls) tru
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> (forall A. A -> A -> A))
\l:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). l (forall A. A -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \tl:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)
BoolNatListPair = (forall C. (Bool -> NatList -> C) -> C) (Type)
insert_init = pair Bool NatList tru (nil Nat)
=> ((forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C))
/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)
insert = \x:Nat. \xs:NatList. is_nil xs NatList (cons Nat x xs) (snd Bool NatList (xs BoolNatListPair (\hd:Nat. \tl:BoolNatListPair. le x hd BoolNatListPair (fst Bool NatList tl BoolNatListPair (pair Bool NatList fls (cons Nat hd (cons Nat x (snd Bool NatList tl)))) (pair Bool NatList fls (cons Nat hd (snd Bool NatList tl)))) (eq (length Nat (snd Bool NatList tl)) (pred (length Nat xs)) BoolNatListPair (pair Bool NatList fls (cons Nat x (cons Nat hd (snd Bool NatList tl)))) (pair Bool NatList (fst Bool NatList tl) (cons Nat hd (snd Bool NatList tl))))) insert_init))
=> ((forall A. (A -> A) -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
\x:(forall A. (A -> A) -> A -> A). \xs:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). xs (forall A. A -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \tl:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (xs B f n)) (xs (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (\hd:(forall A. (A -> A) -> A -> A). \tl:(forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C). x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) hd (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (hd (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (hd (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (tl (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (f x (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl0:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl0 A s z)) (/\A. \s:A -> A. \z:A. z) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) (xs (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl A s z)) (/\A. \s:A -> A. \z:A. z) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (xs (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl A s z)) (/\A. \s:A -> A. \z:A. z) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y) (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl0:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl0 A s z)) (/\A. \s:A -> A. \z:A. z)) (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (f hd (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (tl (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (tl (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n))))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y))
insert one (nil Nat)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s z) n
inserted = insert three (cons Nat four (cons Nat two (cons Nat one (nil Nat))))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n)))
map Nat Nat (\x:Nat. succ x) inserted
=> ((forall C. ((forall A. (A -> A) -> A -> A) -> C -> C) -> C -> C))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) n)))
five = succ four
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s z))))
lst = cons Nat five (cons Nat one (cons Nat four (cons Nat two (cons Nat three (nil Nat)))))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) n))))
is_nil lst
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
is_nil (nil Nat)
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
insert two (insert one (nil Nat))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n)
insert one (insert four (insert two (insert three (nil Nat))))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n)))
insertion_sort = \xs:NatList. xs NatList (\x:Nat. \tl:NatList. insert x tl) (nil Nat)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
\xs:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). xs (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \tl:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). tl (forall A. A -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \tl0:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (tl B f n)) (tl (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (\hd:(forall A. (A -> A) -> A -> A). \tl0:(forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C). x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) hd (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (hd (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (hd (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (tl0 (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (f x (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl00:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl00 A s z)) (/\A. \s:A -> A. \z:A. z) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) (tl (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl0:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl0 A s z)) (/\A. \s:A -> A. \z:A. z) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (tl (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl0:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl0 A s z)) (/\A. \s:A -> A. \z:A. z) (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y) (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) (forall A. (A -> A) -> A -> A) (\hd:(forall A. (A -> A) -> A -> A). \tl00:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (tl00 A s z)) (/\A. \s:A -> A. \z:A. z)) (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall C. ((forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C) -> C) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (f hd (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n)))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (tl0 (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). x)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f hd (tl0 (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y) B f n))))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). y))) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x)
insertion_sort lst
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n))))
append = /\A. \xs:(forall B. (A -> B -> B) -> B -> B). \ys:(forall B. (A -> B -> B) -> B -> B). xs (forall B. (A -> B -> B) -> B -> B) (\x:A. \tl:(forall B. (A -> B -> B) -> B -> B). cons A x tl) ys
=> ((forall A. (forall B. (A -> B -> B) -> B -> B) -> (forall B. (A -> B -> B) -> B -> B) -> (forall B. (A -> B -> B) -> B -> B)))
/\A. \xs:(forall B. (A -> B -> B) -> B -> B). \ys:(forall B. (A -> B -> B) -> B -> B). xs (forall B. (A -> B -> B) -> B -> B) (\x:A. \tl:(forall B. (A -> B -> B) -> B -> B). /\B. \f:A -> B -> B. \n:B. f x (tl B f n)) ys
append Nat lst (insertion_sort lst)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n)))))))))
reverse = /\A. \xs:(forall B. (A -> B -> B) -> B -> B). xs (forall B. (A -> B -> B) -> B -> B) (\x:A. \tl:(forall B. (A -> B -> B) -> B -> B). append A tl (cons A x (nil A))) (nil A)
=> ((forall A. (forall B. (A -> B -> B) -> B -> B) -> (forall B. (A -> B -> B) -> B -> B)))
/\A. \xs:(forall B. (A -> B -> B) -> B -> B). xs (forall B. (A -> B -> B) -> B -> B) (\x:A. \tl:(forall B. (A -> B -> B) -> B -> B). tl (forall B. (A -> B -> B) -> B -> B) (\x0:A. \tl0:(forall B. (A -> B -> B) -> B -> B). /\B. \f:A -> B -> B. \n:B. f x0 (tl0 B f n)) (/\B. \f:A -> B -> B. \n:B. f x n)) (/\B. \f:A -> B -> B. \x:B. x)
reverse Nat (insertion_sort lst)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s (s (s (s z))))) n))))
append Nat (seq four) (seq four)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) n)))))))
reverse Nat (append Nat (seq four) (seq four))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. z) n)))))))
leaf = /\A. /\B. \l:B. \f:B -> A -> B -> B. l
=> ((forall A. (forall B. B -> (B -> A -> B -> B) -> B)))
/\A. /\B. \l:B. \f:B -> A -> B -> B. l
branch = /\A. \lchild:(forall B. B -> (B -> A -> B -> B) -> B). \node:A. \rchild:(forall B. B -> (B -> A -> B -> B) -> B). /\B. \l:B. \f:B -> A -> B -> B. f (lchild B l f) node (rchild B l f)
=> ((forall A. (forall B. B -> (B -> A -> B -> B) -> B) -> A -> (forall B. B -> (B -> A -> B -> B) -> B) -> (forall B. B -> (B -> A -> B -> B) -> B)))
/\A. \lchild:(forall B. B -> (B -> A -> B -> B) -> B). \node:A. \rchild:(forall B. B -> (B -> A -> B -> B) -> B). /\B. \l:B. \f:B -> A -> B -> B. f (lchild B l f) node (rchild B l f)
size = /\A. \tree:(forall B. B -> (B -> A -> B -> B) -> B). tree Nat one (\lcnt:Nat. \y:A. \rcnt:Nat. succ (plus lcnt rcnt))
=> ((forall A. (forall B. B -> (B -> A -> B -> B) -> B) -> (forall A. (A -> A) -> A -> A)))
/\A. \tree:(forall B. B -> (B -> A -> B -> B) -> B). tree (forall A. (A -> A) -> A -> A) (/\A. \s:A -> A. \z:A. s z) (\lcnt:(forall A. (A -> A) -> A -> A). \y:A. \rcnt:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. s (lcnt A s (rcnt A s z)))
NatTree = (forall B. B -> (B -> Nat -> B -> B) -> B) (Type)
natTree = branch Nat (branch Nat (leaf Nat) four (branch Nat (leaf Nat) two (leaf Nat))) one (leaf Nat)
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f l (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f l (/\A. \s:A -> A. \z:A. s (s z)) l)) (/\A. \s:A -> A. \z:A. s z) l
size Nat natTree
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s z))))))
sum = \tree:NatTree. tree Nat zero (\lsum:Nat. \node:Nat. \rsum:Nat. plus node (plus lsum rsum))
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall A. (A -> A) -> A -> A))
\tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. (A -> A) -> A -> A) (/\A. \s:A -> A. \z:A. z) (\lsum:(forall A. (A -> A) -> A -> A). \node:(forall A. (A -> A) -> A -> A). \rsum:(forall A. (A -> A) -> A -> A). /\A. \s:A -> A. \z:A. node A s (lsum A s (rsum A s z)))
sum natTree
=> ((forall A. (A -> A) -> A -> A))
/\A. \s:A -> A. \z:A. s (s (s (s (s (s (s z))))))
treerecO = /\B. /\A. \n:B. pair (forall C. C -> (C -> A -> C -> C) -> C) B (leaf A) n
=> ((forall B. (forall A. B -> (forall C. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> C) -> C))))
/\B. /\A. \n:B. /\C. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> C. f (/\B. \l:B. \f:B -> A -> B -> B. l) n
treerecS = /\B. /\A. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B. \lchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). \node:A. \rchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). pair (forall C. C -> (C -> A -> C -> C) -> C) B (branch A (fst (forall C. C -> (C -> A -> C -> C) -> C) B lchild) node (fst (forall C. C -> (C -> A -> C -> C) -> C) B rchild)) (f (fst (forall C. C -> (C -> A -> C -> C) -> C) B lchild) (snd (forall C. C -> (C -> A -> C -> C) -> C) B lchild) node (fst (forall C. C -> (C -> A -> C -> C) -> C) B rchild) (snd (forall C. C -> (C -> A -> C -> C) -> C) B rchild))
=> ((forall B. (forall A. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B) -> (forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D) -> A -> (forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D) -> (forall C. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> C) -> C))))
/\B. /\A. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B. \lchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). \node:A. \rchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). /\C. \f0:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> C. f0 (/\B. \l:B. \f0:B -> A -> B -> B. f0 (lchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x) B l f0) node (rchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x) B l f0)) (f (lchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x)) (lchild B (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. y)) node (rchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x)) (rchild B (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. y)))
treerec = /\A. /\B. \x:B. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B. \tree:(forall C. C -> (C -> A -> C -> C) -> C). snd (forall C. C -> (C -> A -> C -> C) -> C) B (tree (forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D) (treerecO B A x) (treerecS B A f))
=> ((forall A. (forall B. B -> ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B) -> (forall C. C -> (C -> A -> C -> C) -> C) -> B)))
/\A. /\B. \x:B. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> A -> (forall C. C -> (C -> A -> C -> C) -> C) -> B -> B. \tree:(forall C. C -> (C -> A -> C -> C) -> C). tree (forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D) (/\C. \f:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> C. f (/\B. \l:B. \f:B -> A -> B -> B. l) x) (\lchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). \node:A. \rchild:(forall D. ((forall C. C -> (C -> A -> C -> C) -> C) -> B -> D) -> D). /\C. \f0:(forall C. C -> (C -> A -> C -> C) -> C) -> B -> C. f0 (/\B. \l:B. \f0:B -> A -> B -> B. f0 (lchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x) B l f0) node (rchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x) B l f0)) (f (lchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x)) (lchild B (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. y)) node (rchild (forall C. C -> (C -> A -> C -> C) -> C) (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. x)) (rchild B (\x:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. y)))) B (\x0:(forall C. C -> (C -> A -> C -> C) -> C). \y:B. y)
BoolNatTreePair = (forall B. (Bool -> NatTree -> B) -> B) (Type)
insertTreeInit = pair Bool NatTree tru (leaf Nat)
=> ((forall C. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C) -> C))
/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l)
is_leaf = \tree:NatTree. tree Bool tru (\l:Bool. \node:Nat. \r:Bool. fls)
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall A. A -> A -> A))
\tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (\l:(forall A. A -> A -> A). \node:(forall A. (A -> A) -> A -> A). \r:(forall A. A -> A -> A). /\A. \t:A. \f:A. f)
is_leaf = \tree:NatTree. tree Bool tru (\l:Bool. \node:Nat. \r:Bool. fls)
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall A. A -> A -> A))
\tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (\l:(forall A. A -> A -> A). \node:(forall A. (A -> A) -> A -> A). \r:(forall A. A -> A -> A). /\A. \t:A. \f:A. f)
is_leaf (leaf Nat)
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. t
is_leaf natTree
=> ((forall A. A -> A -> A))
/\A. \t:A. \f:A. f
nat_branch = branch Nat
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall A. (A -> A) -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
\lchild:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). \node:(forall A. (A -> A) -> A -> A). \rchild:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). /\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild B l f) node (rchild B l f)
nat_leaf = leaf Nat
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l
insert_tree_helper = \x:Nat. \tree:NatTree. snd Bool NatTree (treerec Nat BoolNatTreePair insertTreeInit (\lson:NatTree. \ltree:BoolNatTreePair. \node:Nat. \rson:NatTree. \rtree:BoolNatTreePair. le x node BoolNatTreePair (fst Bool NatTree ltree BoolNatTreePair (pair Bool NatTree fls (nat_branch (nat_branch nat_leaf x nat_leaf) node rson)) (pair Bool NatTree fls (nat_branch (snd Bool NatTree ltree) node rson))) (fst Bool NatTree rtree BoolNatTreePair (pair Bool NatTree fls (nat_branch lson node (nat_branch nat_leaf x nat_leaf))) (pair Bool NatTree fls (nat_branch lson node (snd Bool NatTree rtree))))) tree)
=> ((forall A. (A -> A) -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
\x:(forall A. (A -> A) -> A -> A). \tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D) (/\C. \f:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l))) (\lchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). \node:(forall A. (A -> A) -> A -> A). \rchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). /\C. \f0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f0 (/\B. \l:B. \f0:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f0 (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0)) (x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) node (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (node (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (node (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f l x l) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f)))) (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (f l x l))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f)))))) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y)
insert_tree = \x:Nat. \tree:NatTree. is_leaf tree NatTree (nat_branch nat_leaf x nat_leaf) (insert_tree_helper x tree)
=> ((forall A. (A -> A) -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
\x:(forall A. (A -> A) -> A -> A). \tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (\l:(forall A. A -> A -> A). \node:(forall A. (A -> A) -> A -> A). \r:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f l x l) (tree (forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D) (/\C. \f:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l))) (\lchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). \node:(forall A. (A -> A) -> A -> A). \rchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). /\C. \f0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f0 (/\B. \l:B. \f0:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f0 (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0)) (x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) node (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (node (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (node (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f l x l) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f)))) (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (f l x l))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f)))))) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y))
insert_all_tree = \xs:NatList. xs NatTree (\x:Nat. \tree:NatTree. insert_tree x tree) (leaf Nat)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
\xs:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). xs (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. (A -> A) -> A -> A). \tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (\l:(forall A. A -> A -> A). \node:(forall A. (A -> A) -> A -> A). \r:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f l x l) (tree (forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D) (/\C. \f:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l))) (\lchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). \node:(forall A. (A -> A) -> A -> A). \rchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). /\C. \f0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f0 (/\B. \l:B. \f0:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f0 (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0)) (x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) node (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (node (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (node (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f l x l) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f)))) (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (f l x l))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f)))))) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y))) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l)
insert_all_tree (seq four)
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B))
/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f (f (f l (/\A. \s:A -> A. \z:A. z) l) (/\A. \s:A -> A. \z:A. s z) l) (/\A. \s:A -> A. \z:A. s (s z)) l) (/\A. \s:A -> A. \z:A. s (s (s z))) l
tree_to_list = \tree:NatTree. tree NatList (nil Nat) (\lst:NatList. \node:Nat. \rst:NatList. append Nat lst (append Nat (cons Nat node (nil Nat)) rst))
=> ((forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
\tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x) (\lst:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). \node:(forall A. (A -> A) -> A -> A). \rst:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). lst (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \tl:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). /\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (tl B f n)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n0:B. f node (rst B f n0)))
tree_to_list natTree
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. s (s (s (s z)))) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s z) n))
tree_sort = \xs:NatList. tree_to_list (insert_all_tree xs)
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) -> (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
\xs:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). xs (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. (A -> A) -> A -> A). \tree:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). tree (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (\l:(forall A. A -> A -> A). \node:(forall A. (A -> A) -> A -> A). \r:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f l x l) (tree (forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D) (/\C. \f:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. t) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l))) (\lchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). \node:(forall A. (A -> A) -> A -> A). \rchild:(forall D. ((forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> D) -> D). /\C. \f0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) -> (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) -> C. f0 (/\B. \l:B. \f0:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f0 (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:B. x0) B l f0)) (x (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) node (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t) (forall A. A -> A -> A) (node (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). x0 (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0) A s z)) (p (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). x0))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x00:(forall A. (A -> A) -> A -> A). \y1:(forall A. (A -> A) -> A -> A). y1)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (/\A. \t:A. \f:A. f) (forall A. A -> A -> A) (/\A. \t:A. \f:A. t) (node (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). x (forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C) (\p:(forall C. ((forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C) -> C). /\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. s (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x) A s z)) (p (forall A. (A -> A) -> A -> A) (\x:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). x))) (/\C. \f:(forall A. (A -> A) -> A -> A) -> (forall A. (A -> A) -> A -> A) -> C. f (/\A. \s:A -> A. \z:A. z) (/\A. \s:A -> A. \z:A. z)) (forall A. (A -> A) -> A -> A) (\x0:(forall A. (A -> A) -> A -> A). \y:(forall A. (A -> A) -> A -> A). y)) x (forall A. A -> A -> A) (\z:(forall A. A -> A -> A). /\A. \t:A. \f:A. f) (/\A. \t:A. \f:A. t)) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (f l x l) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f) node (rchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f)))) (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall A. A -> A -> A) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). x) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (f l x l))) (/\C. \f:(forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> C. f (/\A. \t:A. \f:A. f) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. f (lchild (forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). x0) B l f) node (rchild (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y) B l f)))))) (forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B) (\x0:(forall C. C -> (C -> (forall A. (A -> A) -> A -> A) -> C -> C) -> C). \y:(forall B. ((forall A. A -> A -> A) -> (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) -> B) -> B). y) (forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B) (\x0:(forall A. A -> A -> A). \y:(forall B. B -> (B -> (forall A. (A -> A) -> A -> A) -> B -> B) -> B). y))) (/\B. \l:B. \f:B -> (forall A. (A -> A) -> A -> A) -> B -> B. l) (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \x:B. x) (\lst:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). \node:(forall A. (A -> A) -> A -> A). \rst:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). lst (forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B) (\x:(forall A. (A -> A) -> A -> A). \tl:(forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B). /\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f x (tl B f n)) (/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n0:B. f node (rst B f n0)))
tree_sort (append Nat (seq four) (seq four))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) n)))))))
tree_sort (reverse Nat (append Nat (seq four) (seq four)))
=> ((forall B. ((forall A. (A -> A) -> A -> A) -> B -> B) -> B -> B))
/\B. \f:(forall A. (A -> A) -> A -> A) -> B -> B. \n:B. f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s z) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s z)) (f (/\A. \s:A -> A. \z:A. s (s (s z))) (f (/\A. \s:A -> A. \z:A. s (s (s z))) n)))))))
bye!
